# Values referenced from: https://github.com/aws/aws-node-termination-handler/tree/main/config/helm/aws-node-termination-handler/templates

nameOverride: ${name_override}
fullnameOverride: ${name_override}

# If false, do not drain nodes when the spot interruption termination notice is received
enableSpotInterruptionDraining: true

# instanceMetadataURL is used to override the default metadata URL (default: http://169.254.169.254:80)
# Note: we want the default value specified explicitly here, because we are updating it externally for tests
instanceMetadataURL: "http://169.254.169.254:80"

# Tells the all daemon sets where to place the node-termination-handler pods.
# For example: lifecycle: "Ec2Spot", on-demand: "false", aws.amazon.com/purchaseType: "spot", etc.
# Value must be a valid yaml expression.
nodeSelector:
  node.kubernetes.io/lifecycle: spot
  role: ${workload_logical_role_name}
  spot-node-termination: regular

# If true, nodes will be tainted when an interruption event occurs.
# Currently used taint keys are aws-node-termination-handler/scheduled-maintenance and
# aws-node-termination-handler/spot-itn
#taintNode: false

# Tells kubectl to continue even if there are pods using emptyDir
# (local data that will be deleted when the node is drained).
#deleteLocalData: false

#podTerminationGracePeriod: 30

#nodeTerminationGracePeriod: 120

# Sets the log level: debug, info, error
#logLevel: "info"

# webhookURL if specified, posts event data to URL upon instance interruption action.
webhookURL: "${webhookURL}"

# webhookProxy if specified, uses this HTTP(S) proxy configuration.
#webhookProxy:

# Default: `{"text":"[NTH][Instance Interruption] EventID: {{ .EventID }} - Kind: {{ .Kind }} - Instance: {{ .InstanceID }} - Node: {{ .NodeName }} - Description: {{ .Description }} - Start Time: {{ .StartTime }}"}`
webhookTemplate: '{
                    "channel": "kube-course",
                    "text": "*Spot interruption for EKS cluster ${cluster_name}!*",
                    "username": "KubeCourse",
                    "icon_emoji": ":boom:",
                    "attachments": [
                      {
                        "text": "{{ .NodeName }}",
                        "color": "warning"
                      }
                    ]
                  }'

# If true, Kubernetes events will be emitted when interruption events are received and when actions are taken on Kubernetes nodes.
emitKubernetesEvents: true
