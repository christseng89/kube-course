{{- define "lib.advancedDeployment" }}
{{- if .Values.createDeployment }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "app.allLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "app.allLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      priorityClassName: {{ .Values.priorityClass.name }}
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              {{- include "app.selectorLabels" . | nindent 14 }}
              app.kubernetes.io/version: {{ include "chart.version" . | quote }}
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              {{- include "app.selectorLabels" . | nindent 14 }}
              app.kubernetes.io/version: {{ include "chart.version" . | quote }}
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      terminationGracePeriodSeconds: 60
      containers:
      - name: {{ .Values.appName }}
        image: "{{ .Values.image.repository }}:{{- include "app.version" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/sh", "-c", "sleep 40" ]
        ports:
          - containerPort: {{ .Values.containerPort }}
            name: http

        {{- if .Values.containerHealthChecks}}
        {{ toYaml .Values.containerHealthChecks | nindent 8 }}
        {{- end}}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}

{{- end }}
{{- end }}
